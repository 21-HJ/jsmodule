% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tb1.R
\name{tb1module2}
\alias{tb1module2}
\title{tb1module2: Shiny module Server for Table 1 using reactive data.}
\usage{
tb1module2(input, output, session, data, data_label,
  data_varStruct = NULL)
}
\arguments{
\item{input}{input}

\item{output}{output}

\item{session}{session}

\item{data}{reactive data}

\item{data_label}{reactive data label(reactive)}

\item{data_varStruct}{Variable structure list of data, Default: NULL}
}
\value{
Shiny module
}
\description{
Shiny module Server for Table 1 using reactive data.
}
\details{
DETAILS
}
\examples{
\dontrun{
if(interactive()){
 library(shiny);library(data.table);library(DT)
 library(jstable);library(shinycustomloader);library(tableone);library(labelled)

 ui <- navbarPage("Basic statistics",
 tabPanel("Data",
          sidebarLayout(
            sidebarPanel(
              csvFileInput("datafile")
            ),
            mainPanel(
              tabsetPanel(type = "pills",
                          tabPanel("Data", withLoader(DTOutput("data"), type="html", loader="loader6")),
                          tabPanel("Label", withLoader(DTOutput("data_label", width = "100\%"), type="html", loader="loader6"))
              )
            )
          )
 ),
 tabPanel("Table 1",
          sidebarLayout(
            sidebarPanel(
              tb1moduleUI("tb1")
            ),
            mainPanel(
              withLoader(DTOutput("table1"), type="html", loader="loader6"),
              wellPanel(
                h5("Normal continuous variables  are summarized with Mean (SD) and t-test(2 groups) or ANOVA(> 2 groups)"),
                h5("Non-normal continuous variables are summarized with median [IQR] and kruskal-wallis test"),
                h5("Categorical variables  are summarized with table")
              )
            )
          )

 )
 )

 server <- function(input, output, session) {
   out_tb1 <- callModule(tb1module2, "tb1",
                         data = data, data_label = data.label, data_varStruct = NULL)
   output$table1 <- renderDT({
     tb = out_tb1()$table
     cap = out_tb1()$caption
     out.tb1 = datatable(tb, rownames = T, extension= "Buttons", caption = cap,
                         options = c(opt.tb1("tb1"),
                                     list(columnDefs = list(list(visible=FALSE, targets= which(colnames(tb) \%in\% c("test","sig"))))
                                     ),
                                     list(scrollX = TRUE)
                         )
     )
     if ("sig" \%in\% colnames(tb)){
       out.tb1 = out.tb1 \%>\% formatStyle("sig", target = 'row' ,backgroundColor = styleEqual("**", 'yellow'))
     }
     return(out.tb1)
   })
 }

 shinyApp(ui, server)
 }
}
}
